version: 2
jobs:
  build:
    docker:
      - image: ekiden/testing
    steps:
      # Set up
      - run: echo 'PS1='"'"'\$ '"'"'; . /root/.bashrc' >> $BASH_ENV
      - run: echo 'export SGX_MODE=SIM' >> $BASH_ENV
      - run: echo 'export INTEL_SGX_SDK=/opt/sgxsdk' >> $BASH_ENV
      - checkout

      # Cargo tests. Some tests are excluded as they currently don't compile.
      - run: |
          cargo test --all \
            --exclude ekiden-untrusted \
            --exclude ekiden-enclave-untrusted \
            --exclude ekiden-rpc-untrusted \
            --exclude ekiden-db-untrusted \
            --exclude ekiden-consensus \
            --exclude token \
            -- --test-threads 1

      # Cargo benchmarks. We first fetch the latest benchmark results from master and then
      # compare against them.
      - run: |
          set +e
          set +o pipefail
          wget -q -O - "https://circleci.com/api/v1.1/project/github/oasislabs/ekiden/latest/artifacts/?branch=master&circle-token=${CIRCLE_TOKEN}" | grep -o 'https://[^"]*' | xargs -P4 -I % wget -q -O /tmp/benchmarks-master.json %?circle-token=${CIRCLE_TOKEN}
      - run: |
          ./scripts/benchmark.py \
              ekiden-rpc-trusted \
              ekiden-db-trusted \
              --output /tmp/benchmarks.json \
              --compare-to /tmp/benchmarks-master.json
      - store_artifacts:
          path: /tmp/benchmarks.json
          destination: benchmarks

      # Install ekiden-tools.
      - run: cargo install --force --path tools ekiden-tools
      # Build key manager contract.
      - run:
          command: cargo ekiden build-contract
          working_directory: contracts/key-manager
      # Build token contract.
      - run:
          command: cargo ekiden build-contract --output-identity
          working_directory: contracts/token
      # Run token contract tests.
      - run: cargo test -p token
      # Ensure everything is built. This needs to be after the key manager contract is built.
      - run: cargo build
      # Check style. This needs to be after everything is built.
      - run: cargo fmt -- --write-mode=diff

      # Contract end-to-end tests.

      # Start the consensus node.
      - run:
          command: ./target/debug/ekiden-consensus
          background: true
      # Start tendermint node.
      - run: tendermint init
      - run:
          command: tendermint node --consensus.create_empty_blocks=false --rpc.laddr tcp://0.0.0.0:46666 --rpc.grpc_laddr tcp://0.0.0.0:46657
          background: true
      # Start key manager compute node.
      - run:
          command: ./target/debug/ekiden-compute target/contract/ekiden-key-manager.so -p 9003 --disable-key-manager --no-persist-identity
          background: true
      # Start token compute node.
      - run:
          command: ./target/debug/ekiden-compute target/contract/token.so --no-persist-identity
          background: true
      # Start token client.
      - run: ./target/debug/token-client --mr-enclave $(cat target/contract/token.mrenclave)

workflows:
  version: 2
  build:
    jobs:
      - build
experimental:
  notify:
    branches:
      only:
        - master
