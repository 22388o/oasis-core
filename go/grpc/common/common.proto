syntax = "proto3";

// Common message definitions across services.

package common;
option go_package = "github.com/oasislabs/ekiden/go/grpc/common";

message Address {
    enum Transport {
        TCPv4 = 0; // TCP IPv4
        TCPv6 = 1; // TCP IPv6
    }
    Transport transport = 1;
    bytes address = 2;
    uint32 port = 3;
}

message Entity {
    bytes id = 1;
    repeated bytes nodes = 2;
    uint64 registration_time = 3;
    bool allow_entity_signed_nodes = 4;
}

message Node {
    bytes id = 1;
    bytes entity_id = 2;
    uint64 expiration = 3;
    CommitteeInfo committee = 4;
    P2PInfo p2p = 5;
    uint64 registration_time = 6;
    repeated NodeRuntime runtimes = 7;
    uint32 roles = 8;
}

message CommitteeInfo {
    bytes certificate = 1;
    repeated Address addresses = 2;
}

message P2PInfo {
    bytes id = 1;
    repeated Address addresses = 2;
}

message NodeRuntime {
    bytes id = 1;
    Capabilities capabilities = 2;
    bytes extra_info = 3;
}

message Capabilities {
    CapabilitiesTEE tee = 1;
}

message CapabilitiesTEE {
    enum Hardware {
        Invalid = 0;  // Invalid (Not used)
        IntelSGX = 1; // Intel SGX
    }
    Hardware hardware = 1;
    bytes rak = 2;
    bytes attestation = 3;
}

message Signature {
    bytes pubkey = 1;
    bytes signature = 2;
}

message Signed {
    bytes blob = 1;
    Signature signature = 2;
}
