syntax = "proto3";

package transactionscheduler;
option go_package = "github.com/oasislabs/ekiden/go/grpc/transactionscheduler";

service TransactionScheduler {
    // SubmitTx submits a new transaction to the transaction scheduler.
    rpc SubmitTx (SubmitTxRequest) returns (SubmitTxResponse) {}
    // IsTransactionQueued checks if the given transaction is present in the
    // transaction scheduler queue and is waiting to be dispatched to a
    // compute committee.
    rpc IsTransactionQueued (IsTransactionQueuedRequest) returns (IsTransactionQueuedResponse) {}
}

message SubmitTxRequest {
    // Runtime identifier.
    bytes runtime_id = 1;
    // Encoded transaction.
    bytes data = 2;
}

message SubmitTxResponse {
}

message IsTransactionQueuedRequest {
    // Runtime identifier.
    bytes runtime_id = 1;
    // Hash of encoded transaction.
    bytes hash = 2;
}

message IsTransactionQueuedResponse {
    // Whether the transaction is queued.
    bool is_queued = 1;
}
