syntax = "proto3";

import "common/common.proto";

package registry;
option go_package = "github.com/oasislabs/oasis-core/go/grpc/registry";

message Runtime {
    bytes id = 1;

    common.CapabilitiesTEE.Hardware tee_hardware = 2;

    uint32 kind = 4;

    VersionInfo version = 5;

    bytes key_manager = 6;

    uint64 compute_group_size = 7;

    uint64 compute_group_backup_size = 8;

    uint64 compute_allowed_stragglers = 9;

    int64 compute_round_timeout = 10;

    uint64 merge_group_size = 11;

    uint64 merge_group_backup_size = 12;

    uint64 merge_allowed_stragglers = 13;

    int64 merge_round_timeout = 14;

    uint64 txn_scheduler_group_size = 15;

    string txn_scheduler_algorithm = 16;

    int64 txn_scheduler_batch_flush_timeout = 17;

    uint64 txn_scheduler_max_batch_size = 18;

    uint64 txn_scheduler_max_batch_size_bytes = 19;

    uint64 storage_group_size = 20;
}

message VersionInfo {
    uint64 version = 1;
    bytes tee = 2;
}

service RuntimeRegistry {
    rpc GetRuntime (RuntimeRequest) returns (RuntimeResponse) {}
    rpc GetRuntimes (RuntimesRequest) returns (RuntimesResponse) {}
    rpc WatchRuntimes (WatchRuntimesRequest) returns (stream WatchRuntimesResponse) {}
}

message RuntimeRequest {
    bytes id = 1;
    int64 height = 2;
}

message RuntimeResponse {
    Runtime runtime = 1;
}

message RuntimesRequest {
    int64 height = 1;
}

message RuntimesResponse {
    repeated Runtime runtime = 1;
}

message WatchRuntimesRequest {
}

message WatchRuntimesResponse {
    Runtime runtime = 1;
}
