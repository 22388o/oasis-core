syntax = "proto3";

import "common/common.proto";

package registry;
option go_package = "github.com/oasislabs/oasis-core/go/grpc/registry";

service EntityRegistry {
    rpc GetEntity (EntityRequest) returns (EntityResponse) {}
    rpc GetEntities (EntitiesRequest) returns (EntitiesResponse) {}
    rpc WatchEntities (WatchEntityRequest) returns (stream WatchEntityResponse) {}
    rpc GetNode (NodeRequest) returns (NodeResponse) {}
    rpc GetNodes (NodesRequest) returns (NodesResponse) {}
    rpc WatchNodes (WatchNodeRequest) returns (stream WatchNodeResponse) {}
    rpc WatchNodeList (WatchNodeListRequest) returns (stream WatchNodeListResponse) {}
}

message EntityRequest {
    bytes id = 1;
    int64 height = 2;
}

message EntityResponse {
    common.Entity entity = 1;
}

message EntitiesRequest {
    int64 height = 1;
}

message EntitiesResponse {
    repeated common.Entity entity = 1;
}

message WatchEntityRequest {
}

message WatchEntityResponse {
    enum ChangeType {
      REGISTERED = 0;
      DEREGISTERED = 1;
    }
    ChangeType event_type = 1;
    common.Entity entity = 2;
}

message NodeRequest {
    bytes id = 1;
    int64 height = 2;
}

message NodeResponse {
    common.Node node = 1;
}

message NodesRequest {
    int64 height = 1;
}

message NodesResponse {
    repeated common.Node node = 1;
}

message EntityNodesRequest {
    bytes id = 1;
    int64 height = 2;
}

message EntityNodesResponse {
    repeated common.Node node = 1;
}

message WatchNodeRequest {
}

message WatchNodeResponse {
    enum ChangeType {
      REGISTERED = 0;
      DEREGISTERED = 1;
    }
    ChangeType event_type = 1;
    common.Node node = 2;
}

message WatchNodeListRequest {
}

message WatchNodeListResponse {
    repeated common.Node node = 1;
}
